{
  "name": "vendor-matching-platform",
  "version": "0.0.1",
  "description": "Global Expansion Management API with MySQL and MongoDB",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "cross-env NODE_ENV=local nest start --watch",
    "start:debug": "cross-env NODE_ENV=local nest start --debug --watch",
    "start:prod": "cross-env NODE_ENV=local node dist/main",
    "start:docker": "NODE_ENV=docker nest start",
    "start:docker:dev": "NODE_ENV=docker nest start --watch",
    "start:docker:prod": "NODE_ENV=docker node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "docker:build": "docker-compose build",
    "docker:up:db": "docker-compose up -d mysql-db mongodb",
    "docker:down:db": "docker-compose down -d mysql-db mongodb",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:restart": "docker-compose restart",
    "docker:logs": "docker-compose logs -f",
    "docker:logs:app": "docker-compose logs -f app",
    "docker:logs:mysql": "docker-compose logs -f mysql-db",
    "docker:logs:mongo": "docker-compose logs -f mongodb",
    "docker:ps": "docker-compose ps",
    "docker:exec:app": "docker-compose exec app sh",
    "docker:exec:mysql": "docker-compose exec mysql-db mysql -u app_user -papp_password vendor_db",
    "docker:exec:mongo": "docker-compose exec mongodb mongosh -u admin -padminpassword --authenticationDatabase admin",
    "docker:dev": "docker-compose up --build",
    "docker:prod": "docker-compose -f docker-compose.prod.yml up --build -d",
    "dev:setup": "npm run docker:up && echo 'Waiting for databases to start...' && sleep 10 && cross-env NODE_ENV=local npm run start:dev",
    "dev:clean": "npm run docker:down",
    "db:migration:generate": "npm run typeorm -- migration:generate -d src/config/typeorm.config.ts",
    "db:migration:run": "npm run typeorm -- migration:run -d src/config/typeorm.config.ts",
    "db:migration:revert": "npm run typeorm -- migration:revert -d src/config/typeorm.config.ts"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^2.0.2",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/jwt": "^11.0.0",
    "@nestjs/mapped-types": "^2.1.0",
    "@nestjs/mongoose": "^11.0.3",
    "@nestjs/passport": "^11.0.5",
    "@nestjs/platform-express": "^11.1.6",
    "@nestjs/schedule": "^6.0.0",
    "@nestjs/swagger": "^11.2.0",
    "@nestjs/typeorm": "^11.0.0",
    "bcrypt": "^6.0.0",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "copyfiles": "^2.4.1",
    "mongoose": "^8.17.2",
    "my-migrator": "^1.0.2",
    "mysql2": "^3.14.3",
    "nodemailer": "^7.0.5",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.26"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@types/bcrypt": "^6.0.0",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.7",
    "@types/nodemailer": "^7.0.1",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "@types/supertest": "^6.0.2",
    "cross-env": "^10.0.0",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^30.0.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
